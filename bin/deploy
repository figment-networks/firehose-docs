#!/usr/bin/env bash

ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

# Used in 'cleanup' phase so we put it here
environment=
force=

main() {
  pushd "$ROOT" &> /dev/null

  while getopts "hf" opt; do
    case $opt in
      h) usage && exit 0;;
      f) force=true;;
      \?) usage_error "Invalid option: -$OPTARG";;
    esac
  done
  shift $((OPTIND-1))

  set -e

  if [ ! -z "$(git status --porcelain)" ]; then
    if [[ $force == "" ]]; then
      echo "Your git directory is not clean, refusing to package in this state"
      exit 1
    fi
  fi

  ./bin/package -p "linux/amd64"

  version=`git rev-parse --short HEAD`
  environment="deploy/environments/prod/main.jsonnet"
  regexp="version: *'.*'"
  replacement="s/$regexp/version: '$version'/g"

  trap cleanup EXIT

  sed -i '' -e "$replacement" "$environment"
  if [ -z "$(git status --porcelain)" ]; then
    echo "We were not able to correctly update version to $version modyfing $environment using replacement $replacement"
    exit 1
  fi

  tk apply "`dirname $environment`"
  git add "$environment"
  git commit -m "Updated environment '`dirname $environment`' version to $version"
  git push
}

cleanup() {
  if [[ "$environment" != "" ]]; then
    if ! git diff --quiet -- $environment; then
      git restore $environment
    fi
  fi
}

usage_error() {
  message="$1"
  exit_code="$2"

  echo "ERROR: $message"
  echo ""
  usage
  exit ${exit_code:-1}
}

usage() {
  echo "usage: deploy [-f]"
  echo ""
  echo "Calls './bin/package -p linux/amd64' to compile the proper image"
  echo "for deployment, adjust the 'deploy/environment/prod' file to udpate the deploy"
  echo "version and then update the cluster."
  echo ""
  echo "Options"
  echo "    -h          Display help about this script"
  echo "    -f          Force deployment even if you have uncommited work"

}

main "$@"